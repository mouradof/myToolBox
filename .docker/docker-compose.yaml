version: "3.8"

services:
  api-frontend:
    container_name: api-frontend
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./src/pages:/app/src/pages
      - ./src/app:/app/src/app

  api-auth:
    container_name: api-auth
    build:
      context: ${API_AUTH_CONTEXT}
      dockerfile: ${DOCKERFILE_PATH}
    ports:
      - "4000:4002"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    volumes:
      - ./src/api-user:/usr/src/app
      - /usr/src/app/node_modules

  api-analytics:
    container_name: ${DOCKERFILE_PATH}
    build:
      context: ${API_ANALYTICS_CONTEXT}
      dockerfile: ${DOCKERFILE_PATH}
    ports:
      - "4001:4002"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./src/api-analytics:/usr/src/app
      - /usr/src/app/node_modules

  api-collaboration:
    container_name: api-collaboration
    build:
      context: ${API_COLLABORATION_CONTEXT}
      dockerfile: ${DOCKERFILE_PATH}
    ports:
      - "4002:4002"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./src/api-collaboration:/usr/src/app
      - /usr/src/app/node_modules

  api-notifications:
    container_name: api-notifications
    build:
      context: ${API_NOTIFICATIONS_CONTEXT}
      dockerfile: ${DOCKERFILE_PATH}
    ports:
      - "4003:4002"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./src/api-notifications:/usr/src/app
      - /usr/src/app/node_modules

  api-tools:
    container_name: api-tools
    build:
      context: ${API_TOOLS_CONTEXT}
      dockerfile: ${DOCKERFILE_PATH}
    ports:
      - "4004:4002"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./src/api-tools:/usr/src/app
      - /usr/src/app/node_modules

  api-workspaces:
    container_name: api-workspaces
    build:
      context: ${API_WORKSPACES_CONTEXT}
      dockerfile: ${DOCKERFILE_PATH}
    ports:
      - "4005:4002"
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./src/api-workspaces:/usr/src/app
      - /usr/src/app/node_modules

  postgres-db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres-db

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  postgres-data: